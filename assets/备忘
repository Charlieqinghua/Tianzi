扩展加入了Raphael.el.animateQueue

新加入raphael的ANIMATEQUEUEMS_DEFAULT 但是要放在哪里呢？

基地实习  22度  160       43度 198

eve('square.click',this,'ddddddddddddd'); //eve 是可以传递上下文和参数的  不过这个上下文要怎么用？

morf.js里的   addKeyframeRule = function(rule) {
            		if (document.styleSheets && document.styleSheets.length)
            			document.styleSheets[0].insertRule(rule, 0);       如何使用？


//获取鼠标位置 原生方法 暂定

///**
// * 获取鼠标在页面上的位置
// * @param ev		触发的事件
// * @return			x:鼠标在页面上的横向位置, y:鼠标在页面上的纵向位置
// */
//function getMousePoint(ev) {
//    // 定义鼠标在视窗中的位置
//    var point = {
//        x:0,
//        y:0
//    };
//
//    // 如果浏览器支持 pageYOffset, 通过 pageXOffset 和 pageYOffset 获取页面和视窗之间的距离
//    if(typeof window.pageYOffset != "undefined") {
//        point.x = window.pageXOffset;
//        point.y = window.pageYOffset;
//    }
//    // 如果浏览器支持 compatMode, 并且指定了 DOCTYPE, 通过 documentElement 获取滚动距离作为页面和视窗间的距离
//    // IE 中, 当页面指定 DOCTYPE, compatMode 的值是 CSS1Compat, 否则 compatMode 的值是 BackCompat
//    else if(typeof document.compatMode != "undefined" && document.compatMode != "BackCompat") {
//        point.x = document.documentElement.scrollLeft;
//        point.y = document.documentElement.scrollTop;
//    }
//    // 如果浏览器支持 document.body, 可以通过 document.body 来获取滚动高度
//    else if(typeof document.body != "undefined") {
//        point.x = document.body.scrollLeft;
//        point.y = document.body.scrollTop;
//    }
//
//    // 加上鼠标在视窗中的位置
//    point.x += ev.clientX;
//    point.y += ev.clientY;
////    console.log('ccc');
//    console.log(point);
//    // 返回鼠标在视窗中的位置
//    return point;
//}
//
//document.onmousedown = function(event){
//    console.log('document click');
//    getMousePoint(event);
//}